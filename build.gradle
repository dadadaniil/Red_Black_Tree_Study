plugins {
    id 'java'
    id 'application'
    id 'org.springframework.boot' version '3.1.0'
    id 'io.spring.dependency-management' version '1.1.0'
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

group = 'org.example'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

ext {
    defaultPath = "data/tree_data.txt"
}

dependencies {
    implementation 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'

    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
//    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.apache.logging.log4j:log4j-api:2.20.0'
    implementation 'org.apache.logging.log4j:log4j-core:2.20.0'
    implementation 'org.postgresql:postgresql:42.7.2'
    implementation 'com.h2database:h2:2.2.220'
    implementation 'mysql:mysql-connector-java:8.0.28'
    implementation 'org.apache.kafka:kafka-clients:3.7.1'
//    implementation 'org.springframework:spring-framework-bom:6.2.0'

    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

test {
    useJUnitPlatform()
}

application {
    mainClass = 'org.example.Main'
}

tasks.register('runWithPath', JavaExec) {
    group = 'application'
    description = 'Run the application with a required path parameter'

    mainClass = 'org.example.Main'

    doFirst {
        if (!project.hasProperty('treePath')) {
            println "Using default path: ${defaultPath}"
            args defaultPath
        } else {
            String customPath = project.property('treePath').toString()
            println "Using provided path: ${customPath}"
            args customPath
        }
    }

    classpath = sourceSets.main.runtimeClasspath
}
